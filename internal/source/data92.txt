qbs *_SUB_IDEDRAWOBJ_STRING1_SEP=NULL;
if(_SUB_IDEDRAWOBJ_STRING1_SEP==NULL){
_SUB_IDEDRAWOBJ_STRING1_SEP=qbs_new_fixed((uint8*)mem_static_malloc(1),1,0);
memset(_SUB_IDEDRAWOBJ_STRING1_SEP->chr,0,1);
}
int32 *_SUB_IDEDRAWOBJ_LONG_X=NULL;
if(_SUB_IDEDRAWOBJ_LONG_X==NULL){
_SUB_IDEDRAWOBJ_LONG_X=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_X=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_Y=NULL;
if(_SUB_IDEDRAWOBJ_LONG_Y==NULL){
_SUB_IDEDRAWOBJ_LONG_Y=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_Y=0;
}
qbs *_SUB_IDEDRAWOBJ_STRING_A=NULL;
if (!_SUB_IDEDRAWOBJ_STRING_A)_SUB_IDEDRAWOBJ_STRING_A=qbs_new(0,0);
int32 *_SUB_IDEDRAWOBJ_LONG_X2=NULL;
if(_SUB_IDEDRAWOBJ_LONG_X2==NULL){
_SUB_IDEDRAWOBJ_LONG_X2=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_X2=0;
}
int32 pass3854;
int32 pass3855;
int32 pass3856;
byte_element_struct *byte_element_3857=NULL;
if (!byte_element_3857){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_3857=(byte_element_struct*)(mem_static_pointer-12); else byte_element_3857=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_3858=NULL;
if (!byte_element_3858){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_3858=(byte_element_struct*)(mem_static_pointer-12); else byte_element_3858=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_SUB_IDEDRAWOBJ_LONG_CX=NULL;
if(_SUB_IDEDRAWOBJ_LONG_CX==NULL){
_SUB_IDEDRAWOBJ_LONG_CX=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_CX=0;
}
byte_element_struct *byte_element_3859=NULL;
if (!byte_element_3859){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_3859=(byte_element_struct*)(mem_static_pointer-12); else byte_element_3859=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_SUB_IDEDRAWOBJ_LONG_TX=NULL;
if(_SUB_IDEDRAWOBJ_LONG_TX==NULL){
_SUB_IDEDRAWOBJ_LONG_TX=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_TX=0;
}
int32 pass3861;
int32 pass3862;
int32 *_SUB_IDEDRAWOBJ_LONG_W=NULL;
if(_SUB_IDEDRAWOBJ_LONG_W==NULL){
_SUB_IDEDRAWOBJ_LONG_W=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_W=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_M=NULL;
if(_SUB_IDEDRAWOBJ_LONG_M==NULL){
_SUB_IDEDRAWOBJ_LONG_M=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_M=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_S=NULL;
if(_SUB_IDEDRAWOBJ_LONG_S==NULL){
_SUB_IDEDRAWOBJ_LONG_S=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_S=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_N=NULL;
if(_SUB_IDEDRAWOBJ_LONG_N==NULL){
_SUB_IDEDRAWOBJ_LONG_N=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_N=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_V1=NULL;
if(_SUB_IDEDRAWOBJ_LONG_V1==NULL){
_SUB_IDEDRAWOBJ_LONG_V1=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_V1=0;
}
qbs *_SUB_IDEDRAWOBJ_STRING_A3=NULL;
if (!_SUB_IDEDRAWOBJ_STRING_A3)_SUB_IDEDRAWOBJ_STRING_A3=qbs_new(0,0);
int32 *_SUB_IDEDRAWOBJ_LONG_I2=NULL;
if(_SUB_IDEDRAWOBJ_LONG_I2==NULL){
_SUB_IDEDRAWOBJ_LONG_I2=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_I2=0;
}
int64 fornext_value3864;
int64 fornext_finalvalue3864;
int64 fornext_step3864;
uint8 fornext_step_negative3864;
byte_element_struct *byte_element_3865=NULL;
if (!byte_element_3865){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_3865=(byte_element_struct*)(mem_static_pointer-12); else byte_element_3865=(byte_element_struct*)mem_static_malloc(12);
}
qbs *_SUB_IDEDRAWOBJ_STRING_A2=NULL;
if (!_SUB_IDEDRAWOBJ_STRING_A2)_SUB_IDEDRAWOBJ_STRING_A2=qbs_new(0,0);
byte_element_struct *byte_element_3866=NULL;
if (!byte_element_3866){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_3866=(byte_element_struct*)(mem_static_pointer-12); else byte_element_3866=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_SUB_IDEDRAWOBJ_LONG_TNUM=NULL;
if(_SUB_IDEDRAWOBJ_LONG_TNUM==NULL){
_SUB_IDEDRAWOBJ_LONG_TNUM=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_TNUM=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_TSEL=NULL;
if(_SUB_IDEDRAWOBJ_LONG_TSEL==NULL){
_SUB_IDEDRAWOBJ_LONG_TSEL=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_TSEL=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_Q=NULL;
if(_SUB_IDEDRAWOBJ_LONG_Q==NULL){
_SUB_IDEDRAWOBJ_LONG_Q=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_Q=0;
}
int32 pass3868;
int32 pass3869;
int32 *_SUB_IDEDRAWOBJ_LONG_C=NULL;
if(_SUB_IDEDRAWOBJ_LONG_C==NULL){
_SUB_IDEDRAWOBJ_LONG_C=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_C=0;
}
int64 fornext_value3871;
int64 fornext_finalvalue3871;
int64 fornext_step3871;
uint8 fornext_step_negative3871;
byte_element_struct *byte_element_3872=NULL;
if (!byte_element_3872){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_3872=(byte_element_struct*)(mem_static_pointer-12); else byte_element_3872=(byte_element_struct*)mem_static_malloc(12);
}
int32 *_SUB_IDEDRAWOBJ_LONG_WHITESPACE=NULL;
if(_SUB_IDEDRAWOBJ_LONG_WHITESPACE==NULL){
_SUB_IDEDRAWOBJ_LONG_WHITESPACE=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_WHITESPACE=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_SPACING=NULL;
if(_SUB_IDEDRAWOBJ_LONG_SPACING==NULL){
_SUB_IDEDRAWOBJ_LONG_SPACING=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_SPACING=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_F2=NULL;
if(_SUB_IDEDRAWOBJ_LONG_F2==NULL){
_SUB_IDEDRAWOBJ_LONG_F2=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_F2=0;
}
int32 *_SUB_IDEDRAWOBJ_LONG_N2=NULL;
if(_SUB_IDEDRAWOBJ_LONG_N2==NULL){
_SUB_IDEDRAWOBJ_LONG_N2=(int32*)mem_static_malloc(4);
*_SUB_IDEDRAWOBJ_LONG_N2=0;
}
int64 fornext_value3874;
int64 fornext_finalvalue3874;
int64 fornext_step3874;
uint8 fornext_step_negative3874;
byte_element_struct *byte_element_3875=NULL;
if (!byte_element_3875){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_3875=(byte_element_struct*)(mem_static_pointer-12); else byte_element_3875=(byte_element_struct*)mem_static_malloc(12);
}
byte_element_struct *byte_element_3876=NULL;
if (!byte_element_3876){
if ((mem_static_pointer+=12)<mem_static_limit) byte_element_3876=(byte_element_struct*)(mem_static_pointer-12); else byte_element_3876=(byte_element_struct*)mem_static_malloc(12);
}
